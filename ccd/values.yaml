tags:
  idam-pr: true  #admin web will add IDAM redirect urls

#subcharts conditions
ccd:
  postgresql:
    enabled: true
  s2s:
    enabled: true
  userProfile:
    enabled: true
  definitionStore:
    enabled: true
  dataStore:
    enabled: true
  draftStore:
    enabled: false
  dmStore:
    enabled: false
  apiGatewayWeb:
    enabled: false
  adminWeb:
    enabled: true
  printService:
    enabled: false
  activityApi:
    enabled: false
  testStubsService:
    enabled: false
  definitionImporter:
    enabled: true
  userProfileImporter:
    enabled: true
  blobstorage:
    enabled: false
  emAnnotation:
    enabled: false
  elastic:
    enabled: false
  ras:
    enabled: true
  mps:
    enabled: false

global:
  ccdApiGatewayIngress: ""
  ccdAdminWebIngress: ""
  idamApiUrl: ""
  idamWebUrl: ""
  ccdDataStoreUrl: "http://{{ .Release.Name }}-ccd-data-store-api"
  amRoleAssignmentServiceUrl: "http://{{ .Release.Name }}-am-role-assignment-service"
  ccdDefinitionStoreUrl: "http://{{ .Release.Name }}-ccd-definition-store"
  ccdUserProfileUrl: "http://{{ .Release.Name }}-ccd-user-profile-api"
  draftStoreUrl: "http://{{ .Release.Name }}-draft-store"
  paymentsUrl: "http://{{ .Release.Name }}-payment-api"
  dmStoreUrl: "http://{{ .Release.Name }}-dm-store"
  emAnnotationUrl: "http://{{ .Release.Name }}-em-annotation"
  s2sUrl: "http://{{ .Release.Name }}-s2s"
  postgresUsername: hmcts
  postgresPassword: hmcts
  
ccd-message-publisher:
  java:
    image: 'hmctspublic.azurecr.io/ccd/message-publisher:latest'
    imagePullPolicy: Always
    releaseNameOverride: "{{ .Release.Name }}-message-publisher"
    ingressHost: ""
    environment:
      DATA_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DATA_STORE_DB_NAME: "data-store"
      DATA_STORE_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      DATA_STORE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
      CCD_CASE_EVENTS_DESTINATION: ccd-case-events
      
am-role-assignment-service:
  java:
    image: 'hmctspublic.azurecr.io/am/role-assignment-service:latest'
    imagePullPolicy: Always
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-am-role-assignment-service"
    environment:
      ROLE_ASSIGNMENT_DB_HOST: "{{ .Release.Name }}-postgresql"
      ROLE_ASSIGNMENT_DB_NAME: "role_assignment"
      ROLE_ASSIGNMENT_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      ROLE_ASSIGNMENT_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      ROLE_ASSIGNMENT_DB_OPTIONS: "?stringtype=unspecified"
      AM_ROLE_ASSIGNMENT_SERVICE_SECRET: AAAAAAAAAAAAAAAA
      IDAM_USER_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      OPEN_ID_API_BASE_URI: "https://idam-web-public.{{ .Values.global.environment }}.platform.hmcts.net/o"
      ROLE_ASSIGNMENT_IDAM_ADMIN_USERID: ras-validation-system@hmcts.net
      APPLICATION_LOGGING_LEVEL: INFO
      BYPASS_ORG_DROOL_RULE: true
      LAUNCH_DARKLY_ENV: pr
      ENABLE_DB_MIGRATE: true
      RUN_DB_MIGRATION_ON_STARTUP: true
    secrets:
      LD_SDK_KEY:
        secretRef: role-assignment-service-LD-SDK-KEY
        key: key
        disabled: true
      ROLE_ASSIGNMENT_IDAM_CLIENT_SECRET:
        secretRef: role-assignment-service-IDAM-CLIENT-SECRET
        key: key
        disabled: true
      ROLE_ASSIGNMENT_IDAM_ADMIN_PASSWORD:
        secretRef: role-assignment-service-IDAM-ADMIN-SECRET
        key: key
        disabled: true

ccd-api-gateway-web:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-api-gw"
    environment:
      IDAM_OAUTH2_CLIENT_ID: ccd_gateway
      IDAM_OAUTH2_TOKEN_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $ }}/oauth2/token'
      IDAM_OAUTH2_LOGOUT_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $ }}/session/:token'
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_SERVICE_KEY: AAAAAAAAAAAAAAAA
      PROXY_AGGREGATED: '{{ tpl .Values.global.ccdDataStoreUrl $}}'
      PROXY_DATA: '{{ tpl .Values.global.ccdDataStoreUrl $}}'
      PROXY_DEFINITION_IMPORT: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}'
      PROXY_DOCUMENT_MANAGEMENT: '{{ tpl .Values.global.dmStoreUrl $}}'
      PROXY_MV_ANNOTATIONS_API_URL: '{{ tpl .Values.global.emAnnotationUrl $}}'
      PROXY_PAYMENTS: '{{ tpl .Values.global.paymentsUrl $}}'
      PROXY_PRINT_SERVICE: http://ccd-case-print-service
      PROXY_CASE_ACTIVITY: http://ccd-case-activity-api
    secrets:
      IDAM_OAUTH2_CLIENT_SECRET:
        secretRef: ccd-api-gateway-oauth2-client-secret
        key: key
        disabled: true

ccd-admin-web:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-admin-web"
    environment:
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_OAUTH2_TOKEN_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $}}/oauth2/token'
      IDAM_OAUTH2_LOGOUT_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $}}/session/:token'
      ADMINWEB_LOGIN_URL: '{{ tpl .Values.global.idamWebUrl $}}/login'
      ADMINWEB_IMPORT_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/import'
      ADMINWEB_JURISDICTIONS_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/data/jurisdictions'
      ADMINWEB_USER_PROFILE_URL: '{{ tpl .Values.global.ccdUserProfileUrl $}}/users'
      ADMINWEB_SAVE_USER_PROFILE_URL: '{{ tpl .Values.global.ccdUserProfileUrl $}}/users/save'
      ADMINWEB_USER_ROLE_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/user-role'
      ADMIN_ALL_USER_ROLES_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/user-roles'
      ADMINWEB_CREATE_DEFINITION_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/draft'
      ADMINWEB_UPDATE_DEFINITION_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/draft/save'
      ADMINWEB_DEFINITIONS_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/drafts'
      ADMINWEB_WHOAMI_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/idam/profile'
      ADMINWEB_IMPORT_AUDITS_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/import-audits'
      ADMINWEB_AUTHORIZATION_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/idam/adminweb/authorization'
      ADMINWEB_DELETE_DEFINITION_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/draft'
      ADMINWEB_ELASTIC_INDEX_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/elastic-support/index'
      ADMINWEB_ROLES_WHITELIST: 'ccd-import,ccd-import-validate'
      IDAM_ADMIN_WEB_SERVICE_KEY: AAAAAAAAAAAAAAAA
    secrets:
      IDAM_OAUTH2_AW_CLIENT_SECRET:
        secretRef: ccd-admin-web-oauth2-client-secret
        key: key
        disabled: true
  idam-pr:
    releaseNameOverride: "{{ .Release.Name }}-ccd-admin-web-idam-pr"
    api:
      url: '{{ tpl .Values.global.idamApiUrl $}}'
    web_public:
      url: '{{ tpl .Values.global.idamWebUrl $}}'
    redirect_uris:
      CCD Admin:
        - 'https://{{ tpl .Values.global.ccdAdminWebIngress $}}/oauth2redirect'

ccd-case-activity-api:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-case-activity-api"
    environment:
      REDIS_SSL_ENABLED: false
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'

ccd-user-profile-api:
  java:
    imagePullPolicy: Always
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-ccd-user-profile-api"
    environment:
      USER_PROFILE_DB_NAME: "user-profile"
      USER_PROFILE_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      USER_PROFILE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      USER_PROFILE_DB_HOST: "{{ .Release.Name }}-postgresql"
      USER_PROFILE_DB_OPTIONS: "?stringtype=unspecified"
      ENABLE_DB_MIGRATE: true
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'

ccd-definition-store-api:
  java:
    imagePullPolicy: Always
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-ccd-definition-store"
    memoryRequests: "1G"
    memoryLimits: "2G"
    secrets:
      STORAGE_ACCOUNT_NAME:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: storageAccountName
        disabled: true
      STORAGE_ACCOUNT_KEY:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: accessKey
        disabled: true
    environment:
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_USER_URL: '{{ tpl .Values.global.idamWebUrl $}}'
      DEFINITION_STORE_DB_NAME: definition-store
      DEFINITION_STORE_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      DEFINITION_STORE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      DEFINITION_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DEFINITION_STORE_DB_OPTIONS: ""
      DEFINITION_STORE_DB_MAX_POOL_SIZE: 5
      USER_PROFILE_HOST: '{{ tpl .Values.global.ccdUserProfileUrl $}}'
      # Storage Account
      AZURE_STORAGE_DEFINITION_UPLOAD_ENABLED: false
      AZURE_STORAGE_BLOB_CONTAINER_REFERENCE: definition-store
      AZURE_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(STORAGE_ACCOUNT_NAME);AccountKey=$(STORAGE_ACCOUNT_KEY);EndpointSuffix=core.windows.net"
      ENABLE_DB_MIGRATE: true
      ELASTIC_SEARCH_ENABLED: false
      FLYWAY_NOOP_STRATEGY: false

ccd-data-store-api:
  java:
    image: 'hmctspublic.azurecr.io/ccd/data-store-api:latest'
    imagePullPolicy: Always
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-ccd-data-store-api"
    environment:
      DATA_STORE_DB_NAME: "data-store"
      DATA_STORE_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      DATA_STORE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      DATA_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
      DATA_STORE_DB_MAX_POOL_SIZE: 10
      CCD_DOCUMENT_URL_PATTERN: https?://(dm-store.*|em-hrs-api.*)
      IDAM_OIDC_URL: '{{ tpl .Values.global.idamWebUrl $}}'
      IDAM_API_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      DATA_STORE_IDAM_KEY: AAAAAAAAAAAAAAAA
      DEFINITION_STORE_HOST: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}'
      USER_PROFILE_HOST: '{{ tpl .Values.global.ccdUserProfileUrl $}}'
      CCD_DRAFT_STORE_URL: '{{ tpl .Values.global.draftStoreUrl $}}'
      ROLE_ASSIGNMENT_URL: '{{ tpl .Values.global.amRoleAssignmentServiceUrl $}}'
      ENABLE_DB_MIGRATE: true
      ELASTIC_SEARCH_ENABLED: false
      ELASTIC_SEARCH_NODES_DISCOVERY_ENABLED: false
      MANAGEMENT_HEALTH_CASE_DOCUMENT_AM_API_ENABLED: false
    secrets:
      IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET:
        secretRef: idam-data-store-client-secret
        key: key
        disabled: true
      IDAM_DATA_STORE_SYSTEM_USER_USERNAME:
        secretRef: idam-data-store-system-user-username
        key: key
        disabled: true
      IDAM_DATA_STORE_SYSTEM_USER_PASSWORD:
        secretRef: idam-data-store-system-user-password
        key: key
        disabled: true


ccd-case-print-service:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-case-print-service"
    environment:
      IDAM_PRINT_SERVICE_KEY: AAAAAAAAAAAAAAAA
      IDAM_API_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_AUTHENTICATION_WEB_URL: '{{ tpl .Values.global.idamWebUrl $}}'
      IDAM_S2S_AUTH: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      CASE_DATA_STORE_URL: '{{ tpl .Values.global.ccdDataStoreUrl $}}'

ccd-test-stubs-service:
  java:
    livenessPath: '/health'
    releaseNameOverride: "{{ .Release.Name }}-ccd-test-stubs-service"

#Dependencies

rpe-service-auth-provider:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-s2s"
    keyVaults:
    environment:
      TESTING_SUPPORT_ENABLED: 'true'
      MICROSERVICEKEYS_CCD_ADMIN: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_DATA: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_DEFINITION: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_GW: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_PS: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_AM_ROLE_ASSIGNMENT_SERVICE: AAAAAAAAAAAAAAAA

draft-store-service:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-draft-store"
    keyVaults:
    environment:
      DRAFT_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DRAFT_STORE_DB_NAME: draftstore
      DRAFT_STORE_DB_PORT: '5432'
      DRAFT_STORE_DB_USER_NAME: '{{ tpl .Values.global.postgresUsername $}}'
      DRAFT_STORE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      RUN_DB_MIGRATION_ON_STARTUP: 'true'
      DRAFT_STORE_DB_CONN_OPTIONS: ""
      SPRING_CLOUD_PROPERTIESVOLUME_ENABLED: false
      IDAM_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'

dm-store:
  java:
    releaseNameOverride: "{{ .Release.Name }}-dm-store"
    secrets:
      STORAGE_ACCOUNT_NAME:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: storageAccountName
      STORAGE_ACCOUNT_KEY:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: accessKey
    keyVaults: {}
    environment:
      ENABLE_DB_MIGRATE: 'true'
      ENABLE_TTL: 'false'
      SPRING_DATASOURCE_URL:  jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/evidence?ssl=disable
      SPRING_DATASOURCE_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      SPRING_DATASOURCE_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      ENABLE_AZURE_STORAGE_CONTAINER: 'true'
      POSTGRES_STORAGE_ENABLED: 'false'
      STORAGEACCOUNT_PRIMARY_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(STORAGE_ACCOUNT_NAME);AccountKey=$(STORAGE_ACCOUNT_KEY);EndpointSuffix=core.windows.net"
      STORAGE_CONTAINER_DOCUMENT_CONTAINER_NAME: dm-store
      IDAM_USER_BASE_URI: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_BASE_URI: '{{ tpl .Values.global.s2sUrl $}}'
      MAX_FILE_SIZE: '100MB'

em-anno:
  java:
    releaseNameOverride: "{{ .Release.Name }}-em-annotation"
    environment:
      ENABLE_LIQUIBASE: 'true'
      SPRING_DATASOURCE_URL:  jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/annotation?ssl=disable
      SPRING_DATASOURCE_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      SPRING_DATASOURCE_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      IDAM_API_BASE_URI: '{{ tpl .Values.global.idamApiUrl $}}'
      S2S_BASE_URI: '{{ tpl .Values.global.s2sUrl $}}'
      DM_STORE_APP_URL: '{{ tpl .Values.global.dmStoreUrl $}}'

postgresql:
  enabled: true
  image:
    tag: '11.16.0'
  auth:
    username: hmcts
    password: hmcts
    database: ccd
  ## Disable Postgres Persistence
  primary:
    persistence:
      enabled: false
    resources:
      requests:
        cpu: 25m
    initdb:
      scripts:
        init.sql: |
          CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "draftstore" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "payment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "evidence" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "annotation" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
          CREATE DATABASE "role_assignment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;

blobstorage:
  releaseNameOverride: "{{ .Release.Name }}-blobstorage"
  resourceGroup: ccd-aks
  teamName: "CCD"
  location: uksouth
  setup:
    containers:
      - definition-store
      - dm-store

ccd-definition-importer:
  releaseNameOverride: "{{ .Release.Name }}-definition-importer"
  idamApiUrl: '{{ tpl .Values.global.idamApiUrl $}}'
  idamClientId: 'ccd_admin'
  redirectUri: "https://{{ tpl .Values.global.ccdAdminWebIngress $}}/oauth2redirect"
  definitionStoreUrl: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}'
  s2sUrl: '{{ tpl .Values.global.s2sUrl $}}'
  verbose: true
  secrets:
    IMPORTER_USERNAME:
      disabled: false
    IMPORTER_PASSWORD:
      disabled: false
    CLIENT_SECRET:
      disabled: false

ccd-user-profile-importer:
  releaseNameOverride: "{{ tpl .Release.Name $}}-user-profile-importer"
  s2sUrl: '{{ tpl .Values.global.s2sUrl $}}'
  userProfileUrl: '{{ tpl .Values.global.ccdUserProfileUrl $}}'

elasticsearch:
  nameOverride: "{{ .Release.Name }}-es"
  clusterName: "es"
  replicas: 1
  minimumMasterNodes: 1
  antiAffinity: "soft"
  esJavaOpts: "-Xmx512m -Xms512m"
  # Their tests delete the pod after succeeding, we pass --logs to the test command which fail if the pod has already been deleted
  # The tests do pass, at least as of 2023-01-19
  tests:
    enabled: false
  extraEnvs:
    - name: discovery.type
      value: single-node
    - name: cluster.initial_master_nodes
      value: ""
    - name: action.auto_create_index
      value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
  persistence:
    enabled: false
  ingress:
    enabled: false
    className: traefik
    # hosts:
    #   - host: es-${SERVICE_FQDN}
    #     paths:
    #       - path: /

logstash:
  image: "hmctspublic.azurecr.io/imported/logstash/logstash"
  imageTag: "7.16.1"
  logstashJavaOpts: -Xmx1g -Xms512M
  persistence:
    enabled: false
  extraEnvs:
    - name: DATA_STORE_PASS
      value: "{{ tpl .Values.global.postgresUsername $}}"
    - name: DATA_STORE_URL
      value: "jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified"
    - name: DATA_STORE_USER
      value: "{{ tpl .Values.global.postgresUsername $}}"
    - name: ES_HOSTS
      value: "{{ .Release.Name }}-es"
  extraInitContainers: |
      - name: download-postgres-jdbc
        image: hmctspublic.azurecr.io/curl:7.70.0
        command: ['curl', '-L', 'https://jdbc.postgresql.org/download/postgresql-42.3.3.jar', '-o', '/logstash-lib/postgresql.jar']
        volumeMounts:
        - name: logstash-lib
          mountPath: /logstash-lib
  extraVolumes: |
    - name: logstash-lib
      emptyDir: {}
  extraVolumeMounts: |
    - name: logstash-lib
      mountPath: /usr/share/logstash/ccd
  logstashConfig:
    logstash.yml: |
      http.host: 0.0.0.0
      xpack.monitoring.enabled: true
      xpack.monitoring.elasticsearch.hosts: ["${ES_HOSTS}"]
      queue.type: persisted
      dead_letter_queue.enable: true
    pipelines.yml: |
      - pipeline.id: main
        path.config: "/usr/share/logstash/pipeline/{01_input,02_filter,03_output}.conf"
        pipeline.workers: 4
        pipeline.batch.size: 500
        queue.type: persisted
  logstashPipeline:
    01_input.conf: |
      input  {
        jdbc {
          jdbc_connection_string => "${DATA_STORE_URL}"
          jdbc_user => "${DATA_STORE_USER}"
          jdbc_password => "${DATA_STORE_PASS}"
          jdbc_validate_connection => true
          jdbc_validation_timeout => "1"
          jdbc_driver_library => "/usr/share/logstash/ccd/postgresql.jar"
          jdbc_driver_class => "org.postgresql.Driver"
          jdbc_default_timezone => "UTC"
          statement => "UPDATE case_data SET marked_by_logstash = true WHERE marked_by_logstash = false RETURNING id, created_date, last_modified, jurisdiction, case_type_id, state, last_state_modified_date, data::TEXT as json_data, data_classification::TEXT as json_data_classification, reference, security_classification, supplementary_data::TEXT as json_supplementary_data"
          clean_run => false
          schedule => "* * * * * *"
        }
      }
    02_filter.conf: |
      filter{
        json{
            source => "json_data"
            target => "data"
            remove_field => ["json_data"]
            }

            json{
                source => "json_supplementary_data"
                target => "supplementary_data"
                remove_field => ["json_supplementary_data"]
            }

            json{
                source => "json_data_classification"
                target => "data_classification"
                remove_field => ["json_data_classification"]
            }

            if [data][SearchCriteria] {
                clone {
                    clones => ["SearchCriteria"]
                }
            }

            if [type] == "SearchCriteria" {
                if [data][SearchCriteria] {
                    mutate {
                      rename => {"[data][SearchCriteria]" => "[data_new][SearchCriteria]" }
                    }
                }
                if [data][caseManagementLocation] {
                    mutate {
                      rename => {"[data][caseManagementLocation]" => "[data_new][caseManagementLocation]" }
                    }
                }
                if [data][CaseAccessCategory] {
                  mutate {
                      rename => {"[data][CaseAccessCategory]" => "[data_new][CaseAccessCategory]" }
                  }
                }
                if [data][caseNameHmctsInternal] {
                    mutate {
                      rename => {"[data][caseNameHmctsInternal]" => "[data_new][caseNameHmctsInternal]" }
                    }
                }
                if [data][caseManagementCategory] {
                    mutate {
                      rename => {"[data][caseManagementCategory]" => "[data_new][caseManagementCategory]" }
                    }
                }
                if [supplementary_data][HMCTSServiceId] {
                    mutate {
                      rename => {"[supplementary_data][HMCTSServiceId]" => "[supplementary_data_new][HMCTSServiceId]" }
                    }
                }
                if [data_classification][SearchCriteria] {
                    mutate {
                      rename => {"[data_classification][SearchCriteria]" => "[data_classification_new][SearchCriteria]" }
                    }
                }
                if [data_classification][CaseAccessCategory] {
                  mutate {
                        rename => {"[data_classification][CaseAccessCategory]" => "[data_classification_new][CaseAccessCategory]" }
                  }
                }
                if [data_classification][caseManagementLocation] {
                  mutate {
                      rename => {"[data_classification][caseManagementLocation]" => "[data_classification_new][caseManagementLocation]" }
                  }
                }
                if [data_classification][caseNameHmctsInternal] {
                    mutate {
                      rename => {"[data_classification][caseNameHmctsInternal]" => "[data_classification_new][caseNameHmctsInternal]" }
                    }
                }

                if [data_classification][caseManagementCategory] {
                    mutate {
                      rename => {"[data_classification][caseManagementCategory]" => "[data_classification_new][caseManagementCategory]" }
                    }
                }
                mutate { remove_field =>[ "data" ,"supplementary_data", "data_classification", "last_state_modified_date", "type","last_modified", "created_date" ] }

                mutate {
                        rename => { "[data_new]" => "data" }
                        rename => { "[supplementary_data_new]"  => "supplementary_data" }
                        rename => { "[data_classification_new]"  => "data_classification" }
                }

                mutate {
                  add_field => { "index_id" => "global_search" }
                }
                mutate {
                  lowercase => [ "index_id" ]
                }
            } else {
                mutate {
                    add_field => { "index_id" => "%{case_type_id}_cases" }
              }
            mutate {
              lowercase => [ "index_id" ]
            }
            }
      }
    03_output.conf: |
      output {
          elasticsearch {
              hosts => ["${ES_HOSTS}"]
              sniffing => false
              index => "%{[index_id]}"
              document_type => "_doc"
              document_id => "%{id}"
              timeout => 60
          }
      }
