tags:
  idam-pr: true  #ccd-case-management-web will add IDAM redirect urls

#subcharts conditions
ccd:
  postgresql:
    enabled: true
  rpeServiceAuthProvider:
    enabled: true
  draftStoreService:
    enabled: true
  dmStore:
    enabled: false
  paymentApi:
    enabled: true

global:
   ccdApiGatewayIngress:
   ccdCaseManagementWebIngress:
   idamApiUrl:
   idamWebUrl:
   ccdDataStoreUrl: http://ccd-data-store
   ccdDefinitionStoreUrl: http://ccd-definition-store
   ccdUserProfileUrl: http://ccd-user-profile
   draftStoreUrl: http://draft-store-service
   paymentsUrl: http://payment-api
   dmStoreUrl: http://dm-store
   s2sUrl: http://service-auth-s2s
   postgresUsername: hmcts
   postgresPassword: hmcts

#TODO once microservice charts have been updated to latest base charts versions
#TODO move to dynamic releaseNameOverride e.g. {{.Release.Name}}-ccd-case-management-web

ccd-case-management-web:
  enabled: true
  nodejs:
    releaseNameOverride: ccd-case-management-web
    environment:
      IDAM_LOGIN_URL: '{{ .Values.global.idamWebUrl }}/login'
      CCD_GW_LOGOUT_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/logout
      CCD_API_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/aggregated
      CCD_DATA_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/data
      CCD_GW_OAUTH2_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/oauth2
      DM_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/documents
      PRINT_SERVICE_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/print
      PRINT_SERVICE_URL_REMOTE: https://return-case-doc-ccd.nonprod.platform.hmcts.net
      CCD_ACTIVITY_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/activity
      PAYMENTS_URL: https://{{ .Values.global.ccdApiGatewayIngress }}/payments

# still not sure this is needed
#idam-pr:
#  enabled: false
#  releaseNameOverride: ccd-idam-pr
#  redirect_uris:
#    CCD:
#      - https://{{Â .Values.global.ccdCaseManagementWebIngress}}/oauth2redirect

ccd-api-gateway-web:
  enabled: true
  nodejs:
    releaseNameOverride: ccd-api-gateway
    environment:
      IDAM_OAUTH2_CLIENT_ID: ccd_gateway
      IDAM_OAUTH2_TOKEN_ENDPOINT: '{{ .Values.global.idamApiUrl }}/oauth2/token'
      IDAM_OAUTH2_LOGOUT_ENDPOINT: '{{ .Values.global.idamApiUrl }}/session/:token'
      IDAM_BASE_URL: '{{ .Values.global.idamApiUrl }}'
      IDAM_S2S_URL: '{{ .Values.global.s2sUrl }}'
      IDAM_SERVICE_KEY: AAAAAAAAAAAAAAAA
      PROXY_AGGREGATED: '{{ .Values.global.ccdDataStoreUrl }}'
      PROXY_DATA: '{{ .Values.global.ccdDataStoreUrl }}'
      PROXY_DEFINITION_IMPORT: '{{ .Values.global.ccdDefinitionStoreUrl }}'
      PROXY_DOCUMENT_MANAGEMENT: '{{ .Values.global.dmStoreUrl }}'
      PROXY_PAYMENTS: '{{ .Values.global.paymentsUrl }}'
      PROXY_PRINT_SERVICE: http://ccd-case-print-service
      CORS_ORIGIN_WHITELIST: "https://{{ .Values.global.ccdCaseManagementWebIngress }},http://{{ .Values.global.ccdCaseManagementWebIngress }},{{ .Values.global.ccdCaseManagementWebIngress }},*"
      PROXY_CASE_ACTIVITY: http://ccd-case-activity-api

ccd-admin-web:
  enabled: true
  nodejs:
    releaseNameOverride: "ccd-admin-web"
    environment:
      IDAM_S2S_URL: '{{ .Values.global.s2sUrl }}'
      IDAM_BASE_URL: '{{ .Values.global.idamWebUrl }}/login'
      IDAM_OAUTH2_TOKEN_ENDPOINT: '{{ .Values.global.idamWebUrl }}/login/oauth2/token'
      IDAM_OAUTH2_LOGOUT_ENDPOINT: '{{ .Values.global.idamWebUrl }}/login/session/:token'

ccd-case-activity-api:
  enabled: false
  nodejs:
    releaseNameOverride: ccd-case-activity-api
    environment:
      REDIS_SSL_ENABLED: false

ccd-user-profile-api:
  enabled: true
  java:
    releaseNameOverride: ccd-user-profile
    readinessDelay: 120
    livenessDelay: 120
    environment:
      USER_PROFILE_DB_NAME: "user-profile"
      USER_PROFILE_DB_USERNAME: '{{ .Values.global.postgresUsername }}'
      USER_PROFILE_DB_PASSWORD: '{{ .Values.global.postgresPassword }}'
      IDAM_S2S_URL: '{{ .Values.global.s2sUrl }}'

ccd-definition-store-api:
  enabled: true
  java:
    releaseNameOverride: ccd-definition-store
    readinessDelay: 180
    livenessDelay: 180
    environment:
      IDAM_S2S_URL: '{{ .Values.global.s2sUrl }}'
      IDAM_USER_URL: '{{ .Values.global.idamApiUrl }}'
      DEFINITION_STORE_DB_NAME: definition-store
      DEFINITION_STORE_DB_USERNAME: '{{ .Values.global.postgresUsername }}'
      DEFINITION_STORE_DB_PASSWORD: '{{ .Values.global.postgresPassword }}'
      USER_PROFILE_HOST: '{{ .Values.global.ccdUserProfileUrl }}'

ccd-data-store-api:
  enabled: true
  java:
    #todo remove 'image' when RDM-5913 is released
    image: 'hmctspublic.azurecr.io/ccd/data-store-api:latest'
    releaseNameOverride: ccd-data-store
    readinessDelay: 240
    livenessDelay: 240
    environment:
      DATA_STORE_DB_NAME: "data-store"
      DATA_STORE_DB_USERNAME: '{{ .Values.global.postgresUsername }}'
      DATA_STORE_DB_PASSWORD: '{{ .Values.global.postgresPassword }}'
      CCD_DM_DOMAIN: https?://dm-store.*
      IDAM_USER_URL: '{{ .Values.global.idamApiUrl }}'
      IDAM_S2S_URL: '{{ .Values.global.s2sUrl }}'
      DATA_STORE_IDAM_KEY: AAAAAAAAAAAAAAAA
      DEFINITION_STORE_HOST: '{{ .Values.global.ccdDefinitionStoreUrl }}'
      USER_PROFILE_HOST: '{{ .Values.global.ccdUserProfileUrl }}'
      CCD_DRAFT_STORE_URL: '{{ .Values.global.draftStoreUrl }}'

ccd-case-print-service:
  enabled: true
  nodejs:
    releaseNameOverride: ccd-case-print-service
    environment:
      IDAM_PRINT_SERVICE_KEY: AAAAAAAAAAAAAAAA
      IDAM_API_URL: '{{ .Values.global.idamApiUrl }}'
      IDAM_AUTHENTICATION_WEB_URL: '{{ .Values.global.idamWebUrl }}'
      IDAM_S2S_AUTH: '{{ .Values.global.s2sUrl }}'
      IDAM_BASE_URL: '{{ .Values.global.idamApiUrl }}'
      IDAM_S2S_URL: '{{ .Values.global.s2sUrl }}'

#TODO add more defaults here from the flux config
ccd-test-stubs-service:
  enabled: true
  java:
    livenessPath: '/health'
    releaseNameOverride: ccd-test-stubs-service

#Dependencies

rpe-service-auth-provider:
  java:
    ingressHost: ""
    releaseNameOverride: service-auth-s2s
    readinessDelay: 180
    livenessDelay: 180
    keyVaults:
    environment:
      TESTING_SUPPORT_ENABLED: 'true'
      MICROSERVICEKEYS_CCD_ADMIN: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_DATA: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_DEFINITION: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_GW: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_PS: AAAAAAAAAAAAAAAA

draft-store-service:
  java:
    releaseNameOverride: draft-store-service
    readinessDelay: 240
    livenessDelay: 240
    keyVaults:
    environment:
      DRAFT_STORE_DB_HOST:  "{{ .Release.Name }}-postgresql"
      DRAFT_STORE_DB_NAME: draftstore
      DRAFT_STORE_DB_PORT: '5432'
      DRAFT_STORE_DB_USER_NAME: '{{ .Values.global.postgresUsername }}'
      DRAFT_STORE_DB_PASSWORD: '{{ .Values.global.postgresPassword }}'
      RUN_DB_MIGRATION_ON_STARTUP: 'true'
      DRAFT_STORE_DB_CONN_OPTIONS: ""
      SPRING_CLOUD_PROPERTIESVOLUME_ENABLED: false
      IDAM_URL: '{{ .Values.global.idamApiUrl }}'
      S2S_URL: '{{ .Values.global.s2sUrl }}'

payment-api:
  java:
    #todo remove 'image' when microservice chart define image itself and empty keyVaults
    image: hmctspublic.azurecr.io/payment/api:latest
    releaseNameOverride: payment-api
    readinessDelay: 180
    livenessDelay: 180
    keyVaults: {}
    environment:
      SPRING_DATASOURCE_USERNAME: '{{ .Values.global.postgresUsername }}'
      SPRING_DATASOURCE_PASSWORD: '{{ .Values.global.postgresPassword }}'
      SPRING_LIQUIBASE_ENABLED: true
      AUTH_IDAM_CLIENT_BASEURL: '{{ .Values.global.idamApiUrl }}'
      CORE_CASE_DATA_API_URL: '{{ .Values.global.ccdDataStoreUrl }}'
      SPRING_DATASOURCE_URL:  jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/payment_api 
      AUTH_PROVIDER_SERVICE_CLIENT_BASEURL: '{{ .Values.global.s2sUrl }}'

dm-store:
  java:
    releaseNameOverride: dm-store
    readinessDelay: 180
    livenessDelay: 180
    secrets:
      STORAGE_ACCOUNT_NAME:
        disabled: true
      STORAGE_ACCOUNT_KEY:
        disabled: true
      STORAGE_CONTAINER_DOCUMENT_CONTAINER_NAME:
        disabled: true
    keyVaults: {}
    environment:
      ENABLE_DB_MIGRATE: 'true'
      ENABLE_TTL: 'false'
      SPRING_DATASOURCE_URL:  jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/evidence?ssl=disable
      SPRING_DATASOURCE_USERNAME: '{{ .Values.global.postgresUsername }}'
      SPRING_DATASOURCE_PASSWORD: '{{ .Values.global.postgresPassword }}'
      ENABLE_AZURE_STORAGE_CONTAINER: 'false'
      POSTGRES_STORAGE_ENABLED: 'true'
      STORAGEACCOUNT_PRIMARY_CONNECTION_STRING: 'DefaultEndpointsProtocol=https;AccountName=AAAAAAAAAAAAAAAA;AccountKey=AAAAAAAAAAAAAAAA;EndpointSuffix=core.windows.net'
      IDAM_USER_BASE_URI: '{{ .Values.global.idamApiUrl }}'
      IDAM_S2S_BASE_URI: '{{ .Values.global.s2sUrl }}'  

postgresql:
  persistence:
    enabled: false
  resources:
    requests:
      cpu: 25m
  initdbScripts:
    init.sql: |-
      CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "draftstore" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "payment_api" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "evidence" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  postgresqlDatabase: ccd
