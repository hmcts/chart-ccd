tags:
  idam-pr: true  #ccd-case-management-web will add IDAM redirect urls

#subcharts conditions
ccd:
  postgresql:
    enabled: true
  s2s:
    enabled: true
  draftStore:
    enabled: true
  dmStore:
    enabled: true
  managementWeb:
    enabled: true
  apiGatewayWeb:
    enabled: true
  adminWeb:
    enabled: true
  printService:
    enabled: true
  activityApi:
    enabled: true
  testStubsService:
    enabled: true
  definitionImporter:
    enabled: false
  userProfileImporter:
    enabled: false
  blobstorage:
    enabled: true
  emAnnotation:
    enabled: false
  ccpay:
    enabled: false

global:
  ccdApiGatewayIngress:
  ccdCaseManagementWebIngress:
  ccdAdminWebIngress:
  idamApiUrl:
  idamWebUrl:
  ccdDataStoreUrl: "http://{{ .Release.Name }}-ccd-data-store-api"
  ccdDefinitionStoreUrl: "http://{{ .Release.Name }}-ccd-definition-store"
  ccdUserProfileUrl: "http://{{ .Release.Name }}-ccd-user-profile-api"
  draftStoreUrl: "http://{{ .Release.Name }}-draft-store"
  paymentsUrl: "http://{{ .Release.Name }}-payment-api"
  dmStoreUrl: "http://{{ .Release.Name }}-dm-store"
  emAnnotationUrl: "http://{{ .Release.Name }}-em-annotation"
  s2sUrl: "http://{{ .Release.Name }}-s2s"
  postgresUsername: hmcts
  postgresPassword: hmcts

ccd-case-management-web:
  nodejs:
    releaseNameOverride:  "{{ .Release.Name }}-ccd-case-mgmt-web"
    environment:
      IDAM_LOGIN_URL: '{{ .Values.global.idamWebUrl }}/login'
      #adding tpl allows global values to be templated  with {{.Release.name}}.
      CCD_GW_LOGOUT_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $ }}/logout
      CCD_API_URL: https://{{ tpl  .Values.global.ccdApiGatewayIngress $ }}/aggregated
      CCD_DATA_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $}}/data
      CCD_GW_OAUTH2_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $}}/oauth2
      DM_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $}}/documents
      PRINT_SERVICE_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $}}/print
      PRINT_SERVICE_URL_REMOTE: https://return-case-doc-ccd.nonprod.platform.hmcts.net
      CCD_ACTIVITY_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $}}/activity
      PAYMENTS_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $ }}/payments
      DM_URL_REMOTE: "^https?://(?:{{ .Release.Name }}-dm-store(?::\\d+)?)/documents"
      ANNOTATION_API_URL: https://{{ tpl .Values.global.ccdApiGatewayIngress $}}/em-anno"
  idam-pr:
    releaseNameOverride: "{{ .Release.Name }}-ccd-idam-pr"
    api:
      url: '{{ tpl .Values.global.idamApiUrl $}}'
    web_public:
      url: '{{ tpl .Values.global.idamWebUrl $}}'
    redirect_uris:
      CCD:
        - 'https://{{ tpl .Values.global.ccdCaseManagementWebIngress $}}/oauth2redirect'

ccd-api-gateway-web:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-api-gw"
    environment:
      IDAM_OAUTH2_CLIENT_ID: ccd_gateway
      IDAM_OAUTH2_TOKEN_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $ }}/oauth2/token'
      IDAM_OAUTH2_LOGOUT_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $ }}/session/:token'
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_SERVICE_KEY: AAAAAAAAAAAAAAAA
      PROXY_AGGREGATED: '{{ tpl .Values.global.ccdDataStoreUrl $}}'
      PROXY_DATA: '{{ tpl .Values.global.ccdDataStoreUrl $}}'
      PROXY_DEFINITION_IMPORT: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}'
      PROXY_DOCUMENT_MANAGEMENT: '{{ tpl .Values.global.dmStoreUrl $}}'
      PROXY_MV_ANNOTATIONS_API_URL: '{{ tpl .Values.global.emAnnotationUrl $}}'
      PROXY_PAYMENTS: '{{ tpl .Values.global.paymentsUrl $}}'
      PROXY_PRINT_SERVICE: http://ccd-case-print-service
      CORS_ORIGIN_WHITELIST: "https://{{ tpl .Values.global.ccdCaseManagementWebIngress $}},http://{{ tpl .Values.global.ccdCaseManagementWebIngress $}},{{ tpl .Values.global.ccdCaseManagementWebIngress $}},*"
      PROXY_CASE_ACTIVITY: http://ccd-case-activity-api

ccd-admin-web:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-admin-web"
    environment:
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_OAUTH2_TOKEN_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $}}/oauth2/token'
      IDAM_OAUTH2_LOGOUT_ENDPOINT: '{{ tpl .Values.global.idamApiUrl $}}/session/:token'
      ADMINWEB_LOGIN_URL: '{{ tpl .Values.global.idamWebUrl $}}/login'
      ADMINWEB_IMPORT_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/import'
      ADMINWEB_JURISDICTIONS_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/data/jurisdictions'
      ADMINWEB_USER_PROFILE_URL: '{{ tpl .Values.global.ccdUserProfileUrl $}}/users'
      ADMINWEB_SAVE_USER_PROFILE_URL: '{{ tpl .Values.global.ccdUserProfileUrl $}}/users/save'
      ADMINWEB_USER_ROLE_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/user-role'
      ADMIN_ALL_USER_ROLES_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/user-roles'
      ADMINWEB_CREATE_DEFINITION_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/draft'
      ADMINWEB_UPDATE_DEFINITION_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/draft/save'
      ADMINWEB_DEFINITIONS_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/drafts'
      ADMINWEB_WHOAMI_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/idam/profile'
      ADMINWEB_IMPORT_AUDITS_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/import-audits'
      ADMINWEB_AUTHORIZATION_URL: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}/api/idam/adminweb/authorization'
      ADMINWEB_ROLES_WHITELIST: 'ccd-import,ccd-import-validate'
      IDAM_ADMIN_WEB_SERVICE_KEY: AAAAAAAAAAAAAAAA
  idam-pr:
    releaseNameOverride: "{{ .Release.Name }}-ccd-admin-web-idam-pr"
    api:
      url: '{{ tpl .Values.global.idamApiUrl $}}'
    web_public:
      url: '{{ tpl .Values.global.idamWebUrl $}}'
    redirect_uris:
      CCD Admin:
        - 'https://{{ tpl .Values.global.ccdAdminWebIngress $}}/oauth2redirect'
ccd-case-activity-api:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-case-activity-api"
    environment:
      REDIS_SSL_ENABLED: false
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'

ccd-user-profile-api:
  java:
    releaseNameOverride: "{{ .Release.Name }}-ccd-user-profile-api"
    readinessDelay: 120
    livenessDelay: 120
    environment:
      USER_PROFILE_DB_NAME: "user-profile"
      USER_PROFILE_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      USER_PROFILE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      USER_PROFILE_DB_HOST: "{{ .Release.Name }}-postgresql"
      USER_PROFILE_DB_OPTIONS: "?stringtype=unspecified"
      ENABLE_DB_MIGRATE: true
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'

ccd-definition-store-api:
  java:
    releaseNameOverride: "{{ .Release.Name }}-ccd-definition-store"
    readinessDelay: 180
    livenessDelay: 180
    secrets:
      STORAGE_ACCOUNT_NAME:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: storageAccountName
      STORAGE_ACCOUNT_KEY:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: accessKey
    environment:
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_USER_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      DEFINITION_STORE_DB_NAME: definition-store
      DEFINITION_STORE_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      DEFINITION_STORE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      DEFINITION_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DEFINITION_STORE_DB_OPTIONS: ""
      DEFINITION_STORE_DB_MAX_POOL_SIZE: 5
      USER_PROFILE_HOST: '{{ tpl .Values.global.ccdUserProfileUrl $}}'
      # Storage Account
      AZURE_STORAGE_DEFINITION_UPLOAD_ENABLED: true
      AZURE_STORAGE_BLOB_CONTAINER_REFERENCE: definition-store
      AZURE_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(STORAGE_ACCOUNT_NAME);AccountKey=$(STORAGE_ACCOUNT_KEY);EndpointSuffix=core.windows.net"
      ENABLE_DB_MIGRATE: true
      ELASTIC_SEARCH_ENABLED: false



ccd-data-store-api:
  java:
    #todo remove 'image' when RDM-5913 is released
    image: 'hmctspublic.azurecr.io/ccd/data-store-api:latest'
    releaseNameOverride: "{{ .Release.Name }}-ccd-data-store-api"
    readinessDelay: 240
    livenessDelay: 240
    environment:
      DATA_STORE_DB_NAME: "data-store"
      DATA_STORE_DB_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      DATA_STORE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      DATA_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DATA_STORE_DB_OPTIONS: "?stringtype=unspecified"
      DATA_STORE_DB_MAX_POOL_SIZE: 10
      CCD_DM_DOMAIN: https?://dm-store.*
      IDAM_USER_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      DATA_STORE_IDAM_KEY: AAAAAAAAAAAAAAAA
      DEFINITION_STORE_HOST: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}'
      USER_PROFILE_HOST: '{{ tpl .Values.global.ccdUserProfileUrl $}}'
      CCD_DRAFT_STORE_URL: '{{ tpl .Values.global.draftStoreUrl $}}'
      ENABLE_DB_MIGRATE: true
      ELASTIC_SEARCH_ENABLED: false
      ELASTIC_SEARCH_NODES_DISCOVERY_ENABLED: false


ccd-case-print-service:
  nodejs:
    releaseNameOverride: "{{ .Release.Name }}-ccd-case-print-service"
    environment:
      IDAM_PRINT_SERVICE_KEY: AAAAAAAAAAAAAAAA
      IDAM_API_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_AUTHENTICATION_WEB_URL: '{{ tpl .Values.global.idamWebUrl $}}'
      IDAM_S2S_AUTH: '{{ tpl .Values.global.s2sUrl $}}'
      IDAM_BASE_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'
      CASE_DATA_STORE_URL: '{{ tpl .Values.global.ccdDataStoreUrl $}}'

#TODO add more defaults here from the flux config
ccd-test-stubs-service:
  java:
    livenessPath: '/health'
    releaseNameOverride: "{{ .Release.Name }}-ccd-test-stubs-service"

#Dependencies

rpe-service-auth-provider:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-s2s"
    readinessDelay: 180
    livenessDelay: 180
    keyVaults:
    environment:
      TESTING_SUPPORT_ENABLED: 'true'
      MICROSERVICEKEYS_CCD_ADMIN: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_DATA: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_DEFINITION: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_GW: AAAAAAAAAAAAAAAA
      MICROSERVICEKEYS_CCD_PS: AAAAAAAAAAAAAAAA

draft-store-service:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-draft-store"
    readinessDelay: 240
    livenessDelay: 240
    keyVaults:
    environment:
      DRAFT_STORE_DB_HOST: "{{ .Release.Name }}-postgresql"
      DRAFT_STORE_DB_NAME: draftstore
      DRAFT_STORE_DB_PORT: '5432'
      DRAFT_STORE_DB_USER_NAME: '{{ tpl .Values.global.postgresUsername $}}'
      DRAFT_STORE_DB_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      RUN_DB_MIGRATION_ON_STARTUP: 'true'
      DRAFT_STORE_DB_CONN_OPTIONS: ""
      SPRING_CLOUD_PROPERTIESVOLUME_ENABLED: false
      IDAM_URL: '{{ tpl .Values.global.idamApiUrl $}}'
      S2S_URL: '{{ tpl .Values.global.s2sUrl $}}'

dm-store:
  java:
    releaseNameOverride: "{{ .Release.Name }}-dm-store"
    readinessDelay: 180
    livenessDelay: 180
    secrets:
      STORAGE_ACCOUNT_NAME:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: storageAccountName
      STORAGE_ACCOUNT_KEY:
        secretRef: storage-secret-{{ .Release.Name }}-blobstorage
        key: accessKey
    keyVaults: {}
    environment:
      ENABLE_DB_MIGRATE: 'true'
      ENABLE_TTL: 'false'
      SPRING_DATASOURCE_URL:  jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/evidence?ssl=disable
      SPRING_DATASOURCE_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      SPRING_DATASOURCE_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      ENABLE_AZURE_STORAGE_CONTAINER: 'true'
      POSTGRES_STORAGE_ENABLED: 'false'
      STORAGEACCOUNT_PRIMARY_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=$(STORAGE_ACCOUNT_NAME);AccountKey=$(STORAGE_ACCOUNT_KEY);EndpointSuffix=core.windows.net"
      STORAGE_CONTAINER_DOCUMENT_CONTAINER_NAME: dm-store
      IDAM_USER_BASE_URI: '{{ tpl .Values.global.idamApiUrl $}}'
      IDAM_S2S_BASE_URI: '{{ tpl .Values.global.s2sUrl $}}'

em-anno:
  java:
    releaseNameOverride: "{{ .Release.Name }}-em-annotation"
    readinessDelay: 180
    livenessDelay: 180
    environment:
      ENABLE_LIQUIBASE: 'true'
      SPRING_DATASOURCE_URL:  jdbc:postgresql://{{ .Release.Name }}-postgresql:5432/annotation?ssl=disable
      SPRING_DATASOURCE_USERNAME: '{{ tpl .Values.global.postgresUsername $}}'
      SPRING_DATASOURCE_PASSWORD: '{{ tpl .Values.global.postgresPassword $}}'
      IDAM_API_BASE_URI: '{{ tpl .Values.global.idamApiUrl $}}'
      S2S_BASE_URI: '{{ tpl .Values.global.s2sUrl $}}'
      DM_STORE_APP_URL: '{{ tpl .Values.global.dmStoreUrl $}}'

postgresql:
  # Due to stability issues in the Preview environment, please disable persistance in the consuming chart for the Preview environment.
  persistence:
    enabled: true
  resources:
    requests:
      cpu: 25m
  initdbScripts:
    init.sql: |-
      CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "draftstore" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "payment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "evidence" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "annotation" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  postgresqlDatabase: ccd

blobstorage:
  releaseNameOverride: "{{ .Release.Name }}-blobstorage"
  resourceGroup: ccd-aks
  teamName: "CCD"
  location: uksouth
  setup:
    containers:
      - definition-store
      - dm-store

ccd-definition-importer:
  releaseNameOverride: "{{ .Release.Name }}-definition-importer"
  redirectUri: "https://{{ tpl .Values.global.ccdCaseManagementWebIngress $}}/oauth2redirect"
  definitionStoreUrl: '{{ tpl .Values.global.ccdDefinitionStoreUrl $}}'
  s2sUrl: '{{ tpl .Values.global.s2sUrl $}}'
  idamApiUrl: '{{ tpl .Values.global.idamApiUrl $}}'
  verbose: true
  secrets:
    IMPORTER_USERNAME:
      disabled: false
    IMPORTER_PASSWORD:
      disabled: false
    CLIENT_SECRET:
      disabled: false

ccd-user-profile-importer:
  releaseNameOverride: "{{ tpl .Release.Name $}}-user-profile-importer"
  s2sUrl: '{{ tpl .Values.global.s2sUrl $}}'
  userProfileUrl: '{{ tpl .Values.global.ccdUserProfileUrl $}}'

ccpay:
  postgresql:
    enabled: false
  fees-register-api:
    enabled: false
  rpe-service-auth-provider:
    enabled: false
  ccpay-bubble-frontend:
    enabled: false
  ccpay-bulkscanning-api:
    enabled: false

  payment-api:
    enabled: true
    java:
      releaseNameOverride: "{{ .Release.Name }}-payment-api"
      secrets:
        PCI_PAL_ACCOUNT_ID_CMC:
          disabled: true
        PCI_PAL_ACCOUNT_ID_PROBATE:
          disabled: true
        PCI_PAL_ACCOUNT_ID_DIVORCE:
          disabled: true
        PCI_PAL_API_URL:
          disabled: true
        PCI_PAL_API_KEY:
          disabled: true
        GOV_PAY_KEYS_PROBATE:
          disabled: true
        GOV_PAY_KEYS_DIVORCE:
          disabled: true
        GOV_PAY_KEYS_CMC:
          disabled: true
        GOV_PAY_KEYS_REFERENCE:
          disabled: true
        LIBERATA_KEYS_OAUTH2_CLIENT_ID:
          disabled: true
        LIBERATA_KEYS_OAUTH2_CLIENT_SECRET:
          disabled: true
        LIBERATA_KEYS_OAUTH2_USERNAME:
          disabled: true
        LIBERATA_KEYS_OAUTH2_PASSWORD:
          disabled: true

